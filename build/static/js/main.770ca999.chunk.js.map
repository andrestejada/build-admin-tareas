{"version":3,"sources":["context/alertas/alertaContext.js","context/auth/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/TareasContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyecto.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/TareasReducer.js","context/tareas/TareasState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/auth/authReducer.js","config/token.js","context/auth/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","autenticado","mensaje","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registartUsuarios","nombre","confirmar","ProyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","TareaContext","Proyecto","proyectoActual","obtenerTareas","TareasContext","_id","ListadoProyecto","proyectos","obtenerProyectos","length","map","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","agregarTarea","errortarea","validarTarea","tareaseleccionada","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","CambiarEstado","estado","tareaSeleccionada","ListadoTareas","eliminarProyecto","tareasproyecto","TransitionGroup","CSSTransition","timeout","classNames","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREA_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","ELIMINAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","respuesta","data","post","proyectoId","delete","Provider","children","TareaState","TareaReducer","params","tareas","put","console","log","alert","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","authReducer","datos","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.770ca999.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nconst alertaContext = createContext()\r\n\r\nexport default alertaContext;","import {createContext} from 'react'\r\n\r\nconst authContext = createContext()\r\n\r\nexport default authContext;","import React ,{useState , useContext ,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst Login = (props) => {\r\n    //context de alerta\r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta,mostrarAlerta} = alertaContext;\r\n    //contex de auth\r\n    const authContext = useContext(AuthContext);\r\n    const {autenticado,mensaje,iniciarSesion} = authContext;\r\n    //en caso de que el password y la contraseña no existan y si pasa enviarlo al proyectos\r\n    useEffect(()=>{\r\n        if(autenticado){\r\n            props.history.push('/proyectos')\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg,mensaje.categoria)\r\n        }\r\n    },[autenticado,mensaje,props.history])\r\n\r\n    const [usuario,guardarUsuario]= useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n\r\n    const {email,password}= usuario\r\n\r\n    const onChange = e =>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault()\r\n        //validar que los campos no esten vacios\r\n        if(email.trim()===''||password.trim()===''){\r\n            mostrarAlerta('Todos los campos son obligatorios','alerta-error')\r\n            return\r\n        }\r\n        //pasar al action\r\n        iniciarSesion({email,password})\r\n    }\r\n\r\n    return ( \r\n        <div className='form-usuario'>\r\n        {alerta ? <div className={`alerta ${alerta.categoria}`} >{alerta.msg}</div> :null}\r\n            <div className='contenedor-form sombra-drark'>\r\n                <h1>Iniciar Sección</h1>\r\n\r\n                <form \r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input \r\n                            type='email'\r\n                            id='email'\r\n                            name='email'\r\n                            placeholder='Tu Email'\r\n                            onChange={onChange}\r\n                            value={email}\r\n                        />\r\n                    </div>\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input \r\n                            type='password'\r\n                            id='password'\r\n                            name='password'\r\n                            placeholder='Tu Password'\r\n                            onChange={onChange}\r\n                            value={password}\r\n                        />\r\n                    </div>\r\n                    <div className='campo-form'>\r\n                        <input\r\n                            type='submit'\r\n                            className='btn btn-primario btn-block'\r\n                            value='Iniciar Sección'\r\n                        />\r\n                    </div>\r\n\r\n                </form>\r\n                <Link to={'/nuevacuenta'} className='enlace-cuenta' >Crear una cuenta</Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Login;","import React ,{useState,useContext,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport AlertaContext from '../../context/alertas/alertaContext'\r\nimport AuthContext from '../../context/auth/authContext'\r\n\r\n\r\nconst NuevaCuenta = (props) => {\r\n    //context de alerta\r\n    const alertaContext = useContext(AlertaContext)\r\n    const {alerta,mostrarAlerta} = alertaContext\r\n    //contex de auth\r\n    const authContext = useContext(AuthContext)\r\n    const {registartUsuarios,autenticado,mensaje} = authContext\r\n    //en caso de que el usuario se haya autenticado o regirtado o el usuario se un registro duplicado\r\n    useEffect(()=>{\r\n        if(autenticado){\r\n            props.history.push('/proyectos')\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg,mensaje.categoria)\r\n        }\r\n    },[autenticado,mensaje,props.history])\r\n\r\n    //state inicial\r\n    const [usuario,guardarUsuario]= useState({\r\n        nombre:'',\r\n        email:'',\r\n        password:'',\r\n        confirmar:''\r\n    })\r\n\r\n    const {nombre,email,password,confirmar}= usuario\r\n\r\n    const onChange = e =>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault()\r\n        //validar\r\n        //que los campos no esten vacios\r\n        if(nombre.trim()===''||email.trim()===''||password.trim()===''||confirmar.trim()===''){\r\n            mostrarAlerta('Todos los campos son obligatorios','alerta-error')\r\n            return\r\n        }\r\n        //password mini de 6 caracteres\r\n        if(password<6){\r\n            mostrarAlerta('El password es de minimo 6 caracteres','alerta-error')\r\n            return\r\n        }\r\n\r\n        //los dos password tienen que se iguales\r\n        if(password !== confirmar){\r\n            mostrarAlerta('Los passwords no son iguales','alerta-error')\r\n            return\r\n        }\r\n        //pasarlo al action\r\n        registartUsuarios({\r\n            nombre,\r\n            email,\r\n            password,\r\n\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className='form-usuario'>\r\n        {alerta ? <div className={`alerta ${alerta.categoria}`} >{alerta.msg}</div> :null}\r\n            <div className='contenedor-form sombra-drark'>\r\n                <h1>Regístrate</h1>\r\n\r\n                <form \r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='email'>Nombre</label>\r\n                        <input \r\n                            type='text'\r\n                            id='nombre'\r\n                            name='nombre'\r\n                            placeholder='Tu Nombre'\r\n                            onChange={onChange}\r\n                            value={nombre}\r\n                        />\r\n                    </div>\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input \r\n                            type='email'\r\n                            id='email'\r\n                            name='email'\r\n                            placeholder='Tu Email'\r\n                            onChange={onChange}\r\n                            value={email}\r\n                        />\r\n                    </div>\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input \r\n                            type='password'\r\n                            id='password'\r\n                            name='password'\r\n                            placeholder='Tu Password'\r\n                            onChange={onChange}\r\n                            value={password}\r\n                        />\r\n                    </div>\r\n                    <div className='campo-form'>\r\n                        <label htmlFor='confirmar'>Confirmar Password</label>\r\n                        <input \r\n                            type='password'\r\n                            id='confirmar'\r\n                            name='confirmar'\r\n                            placeholder='Confirmar Password'\r\n                            onChange={onChange}\r\n                            value={confirmar}\r\n                        />\r\n                    </div>\r\n                    <div className='campo-form'>\r\n                        <input\r\n                            type='submit'\r\n                            className='btn btn-primario btn-block'\r\n                            value='Registrarse'\r\n                        />\r\n                    </div>\r\n\r\n                </form>\r\n                <Link to={'/'} className='enlace-cuenta' >Regresar a Iniciar Sesión </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NuevaCuenta;","import {createContext} from 'react';\r\n\r\n\r\nconst ProyectoContext = createContext()\r\n\r\nexport default ProyectoContext","import React, { Fragment , useState ,useContext} from 'react';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext'\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n    //obtner el state del formulario\r\n    const proyectosContext = useContext(ProyectoContext)\r\n    const {formulario , errorformulario , mostrarFormulario , agregarProyecto , mostrarError } = proyectosContext;\r\n\r\n\r\n    const [proyecto,guardarProyecto]= useState({\r\n        nombre:''\r\n    })\r\n\r\n    const { nombre }= proyecto\r\n\r\n\r\n    const onChangeProyecto = e =>{\r\n            guardarProyecto({\r\n                ...proyecto,\r\n                [e.target.name] : e.target.value\r\n            })\r\n    }\r\n\r\n\r\n    const onSubmitProyecto = e =>{\r\n        e.preventDefault()\r\n\r\n        //validar\r\n        if( nombre === ''){\r\n            mostrarError();\r\n            return\r\n        }\r\n        //agregar al state\r\n        agregarProyecto(proyecto)\r\n       //reiniciar el form\r\n       guardarProyecto({\r\n           nombre:''\r\n       })\r\n\r\n\r\n    }\r\n\r\n    const onClickFormulario = ()=>{\r\n        mostrarFormulario()\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <button \r\n                className='btn btn-block btn-primario'\r\n                type='button'\r\n                onClick={onClickFormulario}\r\n            >Nuevo Proyecto</button> \r\n\r\n\r\n            {formulario\r\n\r\n            ? \r\n                (\r\n                    <form \r\n                className='formulario-nuevo-proyecto'\r\n                onSubmit={onSubmitProyecto}\r\n            >\r\n                \r\n                <input\r\n                    type='text'\r\n                    name='nombre'\r\n                    placeholder='Nombre Proyecto'\r\n                    className='input-text'\r\n                    onChange={onChangeProyecto}\r\n                    value={nombre}\r\n                />\r\n\r\n                <input\r\n                    type='submit'\r\n                    className='btn btn-block btn-primario'\r\n                    value='Agregar Proyecto'\r\n                />\r\n            </form>\r\n                )\r\n            : null}\r\n\r\n            {errorformulario ? <p className='mensaje error'>El Nombre del proyecto es obligatorio</p> : null}\r\n\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default NuevoProyecto;","import React , {createContext} from 'react';\r\n\r\nconst TareaContext =  createContext()\r\n\r\nexport default TareaContext","import React , {useContext} from 'react';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext'\r\nimport TareasContext from '../../context/tareas/TareasContext'\r\n\r\nconst Proyecto = ({proyecto}) => {\r\n\r\n    //Extraer datos del state iniacial\r\n    const proyectoContext = useContext(ProyectoContext)\r\n    const {proyectoActual}= proyectoContext\r\n\r\n    //Extrar el context de los tareas \r\n    const tareasContext = useContext(TareasContext)\r\n    const {obtenerTareas} = tareasContext\r\n\r\n    //Funcion para fijar el proyecto actual\r\n\r\n    const seleccionarProyecto = id =>{\r\n        proyectoActual(id)//fijar proyecto actual\r\n        obtenerTareas(id)\r\n    }\r\n\r\n    return ( \r\n        <li>\r\n            <button \r\n                className='btn btn-blank'\r\n                type='button'\r\n                onClick={ ()=> seleccionarProyecto(proyecto._id) }\r\n            >{proyecto.nombre}</button>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Proyecto;","import React , {useContext,useEffect} from 'react';\r\nimport Proyecto from './Proyecto'\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext'\r\nimport AlertaContext from '../../context/alertas/alertaContext'\r\n\r\nconst ListadoProyecto = () => {\r\n    //Extraer proyectos de state inicial\r\n    const proyectosContext = useContext(ProyectoContext)\r\n    const {proyectos,obtenerProyectos,mensaje} = proyectosContext\r\n    //extraer el context de alertas\r\n    const alertaContext = useContext(AlertaContext);\r\n    const {mostrarAlerta,alerta} = alertaContext\r\n\r\n    useEffect(()=>{\r\n        if(mensaje){\r\n            mostrarAlerta( mensaje.msg,  mensaje.categoria)\r\n        }\r\n        obtenerProyectos()\r\n    },[mensaje])\r\n   //validar si hay o no proyectos \r\n    if(proyectos.length === 0)return <p>No hay proyectos, Empieza creando Uno</p> \r\n\r\n    return (\r\n\r\n        <ul className='listado-proyectos'>\r\n            {alerta ? <div className={`alerta ${alerta.categoria}`} >{alerta.msg}</div>:null}\r\n            {proyectos.map( proyecto=> (\r\n                <Proyecto\r\n                    key={proyecto._id}\r\n                    proyecto= {proyecto}\r\n                />\r\n            ) )}\r\n\r\n        </ul>\r\n      );\r\n}\r\n \r\nexport default ListadoProyecto;","import React from 'react';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto'\r\nimport ListadoProyecto from '../proyectos/ListadoProyecto'\r\n\r\nconst Sidebar = () => {\r\n    return ( \r\n        <aside>\r\n            <h1>MERN <span>Task</span> </h1>\r\n            <NuevoProyecto/>\r\n            <div className=\"proyectos\">\r\n                <h2>Tus Proyectos</h2>\r\n                <ListadoProyecto/>\r\n\r\n                \r\n            </div>\r\n        </aside>\r\n     );\r\n}\r\n \r\nexport default Sidebar;","import React , {useContext,useEffect} from 'react';\r\nimport AuthContext from '../../context/auth/authContext'\r\n\r\n\r\nconst Barra = () => {\r\n    //context de auth\r\n    const authContext = useContext(AuthContext);\r\n    const {usuario,usuarioAutenticado,cerrarSesion} = authContext\r\n    //matiene el usuario autenticado en proyectos\r\n    useEffect(()=>{\r\n        usuarioAutenticado()\r\n    },[])\r\n\r\n    return ( \r\n        <header className='app-header'>\r\n            {usuario ? <p className='nombre-usuario'>Hola <span>{usuario.nombre}</span> </p>:null}\r\n\r\n            <nav className='nav-principal'>\r\n                <button\r\n                    className='btn btn-blank cerrar-sesion'\r\n                    onClick={()=>cerrarSesion()}\r\n                >Cerrar Sesión</button>\r\n            </nav>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Barra;","import React , {useContext , useState, useEffect} from 'react';\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext'\r\nimport TareasContext from '../../context/tareas/TareasContext'\r\n\r\nconst FormTarea = () => {\r\n\r\n    //Extraer datos del state iniacial\r\n    const proyectoContext = useContext(ProyectoContext)\r\n    const {proyecto}= proyectoContext\r\n\r\n    //extraer funcion del context\r\n    const tareasContext = useContext(TareasContext)\r\n    const {agregarTarea ,errortarea , validarTarea ,obtenerTareas ,tareaseleccionada,actualizarTarea,limpiarTarea} = tareasContext\r\n\r\n\r\n     //Effect si hay una tarea seleccionada\r\n     useEffect(()=>{\r\n        if(tareaseleccionada !== null){\r\n            guardarTarea(tareaseleccionada)\r\n        }else{\r\n            guardarTarea({\r\n                nombre:''\r\n            })\r\n        }\r\n    },[tareaseleccionada])\r\n    //state para guardar el nombre de la tarea\r\n    const [tarea , guardarTarea ]=useState({\r\n        nombre: ''\r\n    })\r\n   \r\n\r\n    //array destructuring \r\n    const {nombre}= tarea\r\n\r\n    //si no hay proyecto seleccionado\r\n    if(!proyecto) return null\r\n\r\n    //Array destructuring para extraer el proyecto actual\r\n    const [proyectoActual]=proyecto\r\n\r\n    //funcion guarda los cambiol del nombre de la tarea\r\n\r\n    const hadleOnchange = e =>{\r\n\r\n        guardarTarea({\r\n            ...tarea ,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitTarea = e=>{\r\n        e.preventDefault()\r\n        //validar\r\n        if(nombre.trim()===''){\r\n            validarTarea()\r\n            return\r\n        }\r\n\r\n        //verificar si la tarea es nueva o existente\r\n        if(tareaseleccionada===null){\r\n            //la tarea es nueva\r\n            //agregar la nueva tarea al state de tareas\r\n            tarea.proyecto = proyectoActual._id\r\n            agregarTarea(tarea)\r\n        }else{\r\n            actualizarTarea(tarea)\r\n            //limpiar la tarea para que vulva a null\r\n            limpiarTarea()\r\n        }\r\n\r\n       \r\n        //agregar tareas a tareas del rpyecto seleccionado\r\n        obtenerTareas(proyectoActual.id)\r\n\r\n        //reiniciar el form\r\n        guardarTarea({\r\n            nombre:''\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className='formulario'>\r\n            <form \r\n                onSubmit={onSubmitTarea}\r\n            >\r\n                <div className='contenedor-input'>\r\n                    <input\r\n                        type='text'\r\n                        className='input-text'\r\n                        placeholder='Nombre Tarea'\r\n                        name='nombre'\r\n                        value={nombre}\r\n                        onChange={hadleOnchange}\r\n                    />\r\n                </div>\r\n                <div className='contenedor-input'>\r\n                    <input\r\n                        type='submit'\r\n                        className='btn btn-block btn-primario btn-submit'\r\n                        value={tareaseleccionada ?'Editar Tarea' :'Agregar Tarea'}\r\n                    />\r\n                </div>\r\n            </form>\r\n            {errortarea    \r\n            ?<p className='error mensaje' >El nombre de la tarea es obligatorio</p> \r\n            : null}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FormTarea;","import React , {useContext}from 'react';\r\nimport TareasContext from '../../context/tareas/TareasContext'\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext'\r\n\r\nconst Tarea = ({tarea}) => {\r\n    //Extraer datos del state iniacial\r\n    const proyectoContext = useContext(ProyectoContext)\r\n    const {proyecto}= proyectoContext\r\n    //extraer funcion del context\r\n    const tareasContext = useContext(TareasContext)\r\n    const {eliminarTarea ,obtenerTareas,actualizarTarea,guardarTareaActual} = tareasContext\r\n\r\n    //array destructing\r\n    const [proyectoActual]=proyecto\r\n\r\n    //eliminar la tarea de el proyecto\r\n    const onclickEliminar = id =>{\r\n        eliminarTarea(id,proyectoActual._id)\r\n        obtenerTareas(proyectoActual.id)\r\n    }\r\n    //cambia el estado de la tarea\r\n    const CambiarEstado = tarea =>{\r\n        if(tarea.estado){\r\n            tarea.estado = false\r\n        }else{\r\n            tarea.estado = true\r\n        }\r\n\r\n        actualizarTarea(tarea)\r\n    }\r\n    //seleccione la tarea actual\r\n    const tareaSeleccionada = tarea =>{\r\n        guardarTareaActual(tarea)\r\n\r\n    }\r\n\r\n    return ( \r\n        <li className='tarea sombra'>\r\n            <p>{tarea.nombre}</p>\r\n            <div className='estado' >\r\n                { tarea.estado\r\n                ? \r\n                    (\r\n                        <button \r\n                            className='completo'\r\n                            type='button'\r\n                            onClick={()=> CambiarEstado(tarea) }\r\n                        >Completo</button>\r\n                    )\r\n                : \r\n                    (\r\n                        <button \r\n                            className='incompleto'\r\n                            type='button'\r\n                            onClick={()=> CambiarEstado(tarea) }\r\n                        >Incompleto</button>\r\n                    )\r\n                \r\n                }\r\n            </div>\r\n            <div className='acciones'>\r\n                <button \r\n                    type='button'\r\n                    className='btn btn-primario'\r\n                    onClick={ ()=> tareaSeleccionada(tarea)}\r\n                >Editar</button>\r\n                <button \r\n                    type='button'\r\n                    className='btn btn-secundario'\r\n                    onClick={()=>onclickEliminar(tarea._id) }\r\n                >Eliminar</button>\r\n            </div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Tarea;","import React , {Fragment , useContext} from 'react';\r\nimport Tarea from './Tarea'\r\nimport {CSSTransition , TransitionGroup} from 'react-transition-group'\r\n\r\nimport ProyectoContext from '../../context/proyectos/proyectoContext'\r\nimport TareasContext from '../../context/tareas/TareasContext'\r\n\r\nconst ListadoTareas = () => {\r\n\r\n     //obtner el state del formulario\r\n     const proyectosContext = useContext(ProyectoContext)\r\n     const {proyecto , eliminarProyecto} = proyectosContext;\r\n\r\n     //obtener el state de las tareas\r\n     const tareasContext = useContext(TareasContext)\r\n     const {tareasproyecto} = tareasContext\r\n     //si no hay proyecto seleccionado\r\n     if(!proyecto) return <h2>Seleccione Un Proyecto</h2>\r\n\r\n     //Array destructuring para extraer el proyecto actual\r\n     const [proyectoActual]=proyecto\r\n\r\n    //Elima el proyecto seleccionado\r\n\r\n    const onclickBorrar = ()=>{\r\n        eliminarProyecto(proyectoActual._id)\r\n    }\r\n    return ( \r\n        <Fragment>\r\n            <h2>Proyecto: {proyectoActual.nombre} </h2>\r\n\r\n            <ul className='listado-tareas'>\r\n                {\r\n                    tareasproyecto.length ===0\r\n                    ? <li className='tarea'>No hay tareas</li>\r\n                    : <TransitionGroup>\r\n                        {tareasproyecto.map( tarea => (\r\n                       <CSSTransition\r\n                         key={tarea._id}\r\n                         timeout={200}\r\n                         classNames='tarea'\r\n                       >\r\n                            <Tarea\r\n                                   \r\n                                    tarea={tarea}\r\n                                />\r\n                       </CSSTransition>\r\n                    ) )}\r\n                    </TransitionGroup>\r\n                \r\n                 } </ul>\r\n\r\n            <button\r\n                type='button'\r\n                className='btn btn-eliminar'\r\n                onClick={ onclickBorrar}\r\n            >Eliminar Proyecto &times;</button>            \r\n        \r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default ListadoTareas;","import React ,{useContext,useEffect} from 'react';\r\nimport Sidebar from '../layout/Sidebar'\r\nimport Barra from '../layout/Barra'\r\nimport FormTarea from '../tareas/FormTarea'\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\nimport AuthContext from '../../context/auth/authContext'\r\n\r\n\r\nconst Proyectos = () => {\r\n    //context de auth\r\n    const authContext = useContext(AuthContext);\r\n    const {usuarioAutenticado} = authContext\r\n    //matiene el usuario autenticado en proyectos\r\n    useEffect(()=>{\r\n        usuarioAutenticado()\r\n    },[])\r\n\r\n    return ( \r\n        <div className=\"contenedor-app\">\r\n            <Sidebar/>\r\n\r\n            <div className=\"seccion-principal\">\r\n                <Barra/>\r\n                <main>\r\n                    <FormTarea/>\r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListadoTareas/>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>   \r\n\r\n     );\r\n}\r\n \r\nexport default Proyectos;","//types de proyectos\r\nexport const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO' \r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS' \r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO' \r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO' \r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL' \r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO' \r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR'\r\n//types de tareas\r\nexport const TAREA_PROYECTO = 'TAREA_PROYECTO'\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA'\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA'\r\nexport const ELIMINAR_TAREA =  'ELIMINAR_TAREA'\r\nexport const ESTADO_TAREA =  'ESTADO_TAREA'\r\nexport const TAREA_ACTUAL =  'TAREA_ACTUAL'\r\nexport const ACTUALIZAR_TAREA =  'ACTUALIZAR_TAREA'\r\nexport const LIMPIAR_TAREA =  'LIMPIAR_TAREA'\r\n//alerta nuevo usuario\r\nexport const MOSTRAR_ALERTA =  'MOSTRAR_ALERTA'\r\nexport const ELIMINAR_ALERTA =  'ELIMINAR_ALERTA'\r\n//types de auth\r\nexport const REGISTRO_EXITOSO =  'REGISTRO_EXITOSO'\r\nexport const REGISTRO_ERROR =  'REGISTRO_ERROR'\r\nexport const OBTENER_USUARIO =  'OBTENER_USUARIO'\r\nexport const LOGIN_EXITOSO =  'LOGIN_EXITOSO'\r\nexport const LOGIN_ERROR =  'LOGIN_ERROR'\r\nexport const CERRAR_SESION =  'CERRAR_SESION'\r\n","import {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR\r\n} from '../../types/index'\r\n\r\nexport default (state , action)=>{\r\n\r\n    switch(action.type){\r\n        case FORMULARIO_PROYECTO :\r\n            return {\r\n                ...state,\r\n                formulario:true\r\n            };\r\n        case OBTENER_PROYECTOS :\r\n            return{\r\n                ...state,\r\n                proyectos : action.payload\r\n            }\r\n        case AGREGAR_PROYECTO :\r\n            return{\r\n                ...state,\r\n                proyectos: [...state.proyectos , action.payload],\r\n                formulario : false,\r\n                errorformulario: false\r\n            }\r\n        case VALIDAR_FORMULARIO :\r\n            return{\r\n                ...state,\r\n                errorformulario: true\r\n            }\r\n        case PROYECTO_ACTUAL :\r\n            return{\r\n                ...state,\r\n                proyecto: state.proyectos.filter( proyecto => proyecto._id === action.payload )\r\n\r\n            }\r\n        case ELIMINAR_PROYECTO :\r\n            return{\r\n                ...state,\r\n                proyectos: state.proyectos.filter( proyecto => proyecto._id !== action.payload ),\r\n                proyecto: null\r\n            }\r\n        case PROYECTO_ERROR:\r\n            return{\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios'\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n})\r\n\r\n\r\nexport default clienteAxios","import React, { useReducer } from 'react'\r\nimport ProyectoContext from './proyectoContext'\r\nimport proyectoReducer from './proyectoReducer'\r\nimport {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR\r\n} from '../../types/index';\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst ProyectoState = props => {\r\n\r\n  const initialState = {\r\n    proyectos: [],\r\n    formulario: false,\r\n    errorformulario: false,\r\n    proyecto: null,\r\n    mensaje:null\r\n  }\r\n\r\n  //dispatch para ejecutar la funciones\r\n\r\n  const [state, dispatch] = useReducer(proyectoReducer, initialState)\r\n\r\n  //serie de funcione para el CRUD\r\n\r\n  const mostrarFormulario = () => {\r\n    dispatch({\r\n      type: FORMULARIO_PROYECTO\r\n    })\r\n  }\r\n\r\n  //Obtener proyectos\r\n  const obtenerProyectos = async () => {\r\n   try {\r\n     const respuesta = await clienteAxios.get('/api/proyectos')\r\n     dispatch({\r\n      type: OBTENER_PROYECTOS,\r\n      payload: respuesta.data.proyectos\r\n    })\r\n   } catch (error) {\r\n    const alerta ={\r\n      msg:'Hubo un error',\r\n      categoria: 'alerta-error'\r\n    }\r\n   dispatch({\r\n     type: PROYECTO_ERROR,\r\n     payload: alerta\r\n   })\r\n   }\r\n  }\r\n\r\n  //Agregar Proyectos\r\n  const agregarProyecto = async proyecto => {\r\n    try {\r\n      const respuesta = await clienteAxios.post('/api/proyectos',proyecto)\r\n      dispatch({\r\n        type:AGREGAR_PROYECTO,\r\n        payload:respuesta.data\r\n      })\r\n\r\n    } catch (error) {\r\n      const alerta ={\r\n        msg:'Hubo un error',\r\n        categoria: 'alerta-error'\r\n      }\r\n     dispatch({\r\n       type: PROYECTO_ERROR,\r\n       payload: alerta\r\n     })\r\n    }\r\n  \r\n  }\r\n\r\n  //validar que el formulario no se envie vacio\r\n  const mostrarError = () => {\r\n    dispatch({\r\n      type: VALIDAR_FORMULARIO\r\n    })\r\n  }\r\n\r\n  //selecciona al poryecto que el usuario le dio click\r\n  const proyectoActual = proyectoId => {\r\n    dispatch({\r\n      type: PROYECTO_ACTUAL,\r\n      payload: proyectoId\r\n    })\r\n  }\r\n\r\n  //Eliminar Proyecto\r\n  const eliminarProyecto = async proyectoId =>{\r\n    try {\r\n      await clienteAxios.delete(`api/proyectos/${proyectoId}`)\r\n      dispatch({\r\n        type:ELIMINAR_PROYECTO,\r\n        payload:proyectoId\r\n    })\r\n    } catch (error) {\r\n      const alerta ={\r\n        msg:'Hubo un error',\r\n        categoria: 'alerta-error'\r\n      }\r\n     dispatch({\r\n       type: PROYECTO_ERROR,\r\n       payload: alerta\r\n     })\r\n  }\r\n  }\r\n  return (\r\n    <ProyectoContext.Provider\r\n      value={{\r\n        formulario: state.formulario,\r\n        proyectos: state.proyectos,\r\n        errorformulario: state.errorformulario,\r\n        proyecto: state.proyecto,\r\n        mensaje: state.mensaje,\r\n        mostrarFormulario,\r\n        obtenerProyectos,\r\n        agregarProyecto,\r\n        mostrarError,\r\n        proyectoActual,\r\n        eliminarProyecto\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProyectoContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ProyectoState\r\n","import {TAREA_PROYECTO,AGREGAR_TAREA,VALIDAR_TAREA,ELIMINAR_TAREA,TAREA_ACTUAL,ACTUALIZAR_TAREA,LIMPIAR_TAREA} from '../../types'\r\n\r\nexport default (state,action)=>{\r\n    switch(action.type){\r\n        case TAREA_PROYECTO :\r\n            return{\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            }\r\n        case AGREGAR_TAREA :\r\n            return{\r\n                ...state,\r\n                tareasproyecto: [action.payload ,...state.tareasproyecto  ],\r\n                errortarea:false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter( tarea=> tarea._id !== action.payload )\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return{\r\n                ...state,\r\n                \r\n                tareasproyecto : state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea )\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada: action.payload\r\n            }\r\n        case LIMPIAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada:null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React , {useReducer} from 'react';\r\nimport TareaContext  from './TareasContext'\r\nimport TareaReducer from './TareasReducer'\r\nimport {TAREA_PROYECTO,AGREGAR_TAREA,VALIDAR_TAREA,ELIMINAR_TAREA,ESTADO_TAREA,TAREA_ACTUAL,ACTUALIZAR_TAREA,LIMPIAR_TAREA} from '../../types'\r\nimport clienteAxios  from '../../config/axios'\r\n\r\nconst TareaState = props => {\r\n    const initialState={\r\n        tareasproyecto: [],\r\n        errortarea:false,\r\n        tareaseleccionada:null\r\n    }\r\n\r\n    const [state,dispatch]= useReducer(TareaReducer,initialState)\r\n\r\n    //funciones que modifican el state\r\n    const obtenerTareas = async proyecto =>{\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/tareas',{params:{proyecto}})\r\n            dispatch({\r\n                type: TAREA_PROYECTO,\r\n                payload: respuesta.data.tareas\r\n            })\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    //Funcion para agregar tarea al State\r\n    const agregarTarea = async tarea =>{\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/tareas',tarea)\r\n            dispatch({\r\n                type:AGREGAR_TAREA,\r\n                payload: tarea\r\n            })\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    //Mensaje de error cuando intenta enviar una tarea vacia\r\n    const validarTarea = ()=>{\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n\r\n    //Eliminar la tarea con respecto a su id\r\n    const eliminarTarea =async(id, proyecto) =>{\r\n      try {\r\n        await clienteAxios.delete(`api/tareas/${id}`, {params:{proyecto}})\r\n        dispatch({\r\n            type:ELIMINAR_TAREA,\r\n            payload: id\r\n           })\r\n      } catch (error) {\r\n          \r\n      }\r\n    }\r\n  \r\n    //guarda la tarea seleccionada\r\n    const guardarTareaActual =  tarea =>{\r\n        dispatch({\r\n            type:TAREA_ACTUAL,\r\n            payload:tarea\r\n        })\r\n    }\r\n    //actulizar una tarea seleccionada\r\n    const actualizarTarea = async tarea =>{\r\n\r\n        \r\n        try {\r\n            const respuesta = await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea)\r\n            console.log(respuesta)\r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload:respuesta.data.tarea\r\n            })\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    //Limpiar la tarea\r\n    const limpiarTarea = ()=>{\r\n        dispatch({\r\n            type:LIMPIAR_TAREA,\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <TareaContext.Provider\r\n            value={{\r\n                tareasproyecto: state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaseleccionada: state.tareaseleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n     );\r\n}\r\n \r\nexport default TareaState;","import {MOSTRAR_ALERTA,ELIMINAR_ALERTA} from '../../types'\r\n\r\nexport default (state,action)=>{\r\n    switch(action.type){\r\n        case MOSTRAR_ALERTA :\r\n            return{\r\n                alerta: action.payload\r\n            }\r\n        case ELIMINAR_ALERTA:\r\n            return{\r\n                alert:null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React , {useReducer} from 'react';\r\nimport {MOSTRAR_ALERTA,ELIMINAR_ALERTA} from '../../types'\r\nimport alertaContext from '../../context/alertas/alertaContext'\r\nimport alertaReducer from '../../context/alertas/alertaReducer'\r\n\r\n\r\nconst AlertaState = props => {\r\n\r\n    const initialState={\r\n        alerta:null\r\n    }\r\n\r\n    const [state,dispatch] = useReducer(alertaReducer,initialState);\r\n\r\n    const mostrarAlerta = (msg,categoria)=>{\r\n        dispatch({\r\n            type:MOSTRAR_ALERTA,\r\n            payload: {\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n\r\n        setTimeout(()=>{\r\n            dispatch({\r\n                type: ELIMINAR_ALERTA\r\n            })\r\n        },3000)\r\n    }\r\n\r\n    return ( \r\n        <alertaContext.Provider\r\n            value={{\r\n                alerta: state.alerta,\r\n                mostrarAlerta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </alertaContext.Provider>\r\n     );\r\n}\r\n \r\nexport default AlertaState;","import {REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION} from '../../types'\r\n\r\nexport default (state,action)=>{\r\n    switch(action.type){\r\n        case REGISTRO_EXITOSO:\r\n        case LOGIN_EXITOSO:\r\n            localStorage.setItem('token',action.payload.token)\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando:true\r\n            }\r\n        case REGISTRO_ERROR:\r\n        case LOGIN_ERROR:\r\n        case CERRAR_SESION:\r\n            localStorage.removeItem('token')\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                mensaje: action.payload,\r\n                usuario:null,\r\n                autenticado:null,\r\n                cargando:false\r\n            }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                usuario:action.payload,\r\n                autenticado:true,\r\n                cargando:true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import clienteAxios  from '../config/axios'\r\n\r\n\r\nconst tokenAuth = token =>{\r\n    if(token){\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token\r\n    }else{\r\n        delete clienteAxios.defaults.headers.common['x-auth-token']\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React , {useReducer} from 'react';\r\nimport authContext from './authContext'\r\nimport authReducer from './authReducer'\r\nimport {REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\nimport tokenAuth from '../../config/token'\r\n\r\n\r\nconst AuthState = props => {\r\n    const initialState={\r\n        token: localStorage.getItem('token'),\r\n        autenticado:null,\r\n        usuario:null,\r\n        mensaje:null,\r\n        cargando:true\r\n    }\r\n\r\n    const [state,dispatch]= useReducer(authReducer,initialState)\r\n    //funciones\r\n\r\n    const registartUsuarios = async datos=>{\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/usuarios',datos)\r\n\r\n            dispatch({\r\n                type:REGISTRO_EXITOSO,\r\n                payload : respuesta.data\r\n            })\r\n            //obtner el usuario autenticado\r\n            usuarioAutenticado()   \r\n        } catch (error) {\r\n           //console.log(error.response.data.msg)\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type:REGISTRO_ERROR,\r\n                payload:alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    //Retorna el usuario autentica\r\n    const usuarioAutenticado = async ()=>{\r\n        const token = localStorage.getItem('token')\r\n        if(token){\r\n            tokenAuth(token)\r\n        }\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth')\r\n            dispatch({\r\n                type:OBTENER_USUARIO,\r\n                payload:respuesta.data.usuario\r\n            }) \r\n            \r\n            \r\n        } catch (error) {\r\n            dispatch({\r\n                type:LOGIN_ERROR\r\n            })\r\n        }\r\n    }\r\n\r\n    //Iniciar Sesion\r\n\r\n    const iniciarSesion = async datos =>{\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth',datos)\r\n            dispatch({\r\n                type:LOGIN_EXITOSO, \r\n                payload: respuesta.data\r\n            })\r\n            usuarioAutenticado()\r\n\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type:LOGIN_ERROR,\r\n                payload:alerta\r\n            })\r\n        }\r\n        }\r\n    //cerrar sesion\r\n    const cerrarSesion = ()=>{\r\n        dispatch({\r\n            type:CERRAR_SESION\r\n        })\r\n    }\r\n    \r\n\r\n    return ( \r\n        <authContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                cargando:state.cargando,\r\n                registartUsuarios,\r\n                iniciarSesion,\r\n                usuarioAutenticado,\r\n                cerrarSesion\r\n            }}\r\n        >\r\n            {props.children}\r\n        </authContext.Provider>\r\n     );\r\n}\r\n \r\nexport default AuthState;","import React , {useContext,useEffect} from 'react';\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport AuthContext from '../../context/auth/authContext'\r\n\r\nconst RutaPrivada = ({component:Component,...props}) => {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {autenticado ,cargando,usuarioAutenticado } = authContext\r\n\r\n    useEffect(()=>{\r\n        usuarioAutenticado()\r\n    },[])\r\n    \r\n    return ( \r\n        <Route {...props} render={props=> !autenticado&& !cargando ? <Redirect to='/' /> :<Component {...props} /> } />\r\n     );\r\n}\r\n \r\nexport default RutaPrivada;\r\n","import React from 'react';\nimport Login from './components/auth/Login'\nimport NuevaCuenta from './components/auth/NuevaCuenta'\nimport Proyectos from './components/proyectos/Proyectos'\nimport {BrowserRouter as Router , Route ,Switch} from 'react-router-dom'\nimport ProyectoState from './context/proyectos/proyectoState'\nimport TareaState from './context/tareas/TareasState'\nimport AlertaState from './context/alertas/alertaState'\nimport AuthState from './context/auth/authState'\nimport tokenAuth from './config/token'\nimport RutaPrivada from './components/rutas/RutaPrivada'\n//revisar si tenemos un token\nconst token = localStorage.getItem('token');\nif(token){\n  tokenAuth(token)\n}\n\nfunction App() {\n  return (\n\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n         <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path='/nuevacuenta' component={NuevaCuenta}/>\n                <RutaPrivada exact path='/proyectos' component={Proyectos} />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n\n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}